import io

from advent.days.day18 import (
    first,
    instruction_to_vertices,
    merge,
    parse_input,
    second,
)
from advent.matrix import is_clockwise

data = """R 6 (#70c710)
D 5 (#0dc571)
L 2 (#5713f0)
D 2 (#d2c081)
R 2 (#59c680)
D 2 (#411b91)
L 5 (#8ceee2)
U 2 (#caa173)
L 1 (#1b58a2)
U 2 (#caa171)
R 2 (#7807d2)
U 3 (#a77fa3)
L 2 (#015232)
U 2 (#7a21e3)"""


data_inside = "*************##########**************************************************************************************************#..............................................................##########*********************************************************#........................................................#########****************************#..................#*******************#.............."
data_inside_expected = ".............##########**************************************************************************************************#..............................................................##########*********************************************************#........................................................#########****************************#..................#*******************#.............."


def test_clockwise():
    dig_plan = parse_input(io.StringIO(data))
    vertices = instruction_to_vertices(dig_plan)
    assert is_clockwise(vertices) is True
    assert is_clockwise(list(reversed(vertices))) is False


def test_merge():
    assert merge((0, 2), (2, 6)) == [(0, 6)]
    assert merge((2, 6), (0, 2)) == [(0, 6)]
    assert merge((0, 6), (4, 6)) == [(0, 4)]


def test_first():
    assert first(io.StringIO(data)) == 62


def test_second():
    assert second(io.StringIO(data)) == 952408144115
